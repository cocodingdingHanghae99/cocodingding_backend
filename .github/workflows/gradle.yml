name: server CI/CD
# main에 푸쉬 또는 pull_request 할때 동작

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  S3_BUCKET_NAME: cocodingding

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      ## application.properties 파일 생성
      - name: make application.properties
        run: |
          echo ">> mkdir & touch"
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.properties
          echo ">> copy application.properties"
          echo "${{ secrets.PROPERTIES }}" >> ./application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

#      - name: Make zip file
#        run: zip -r ./cocodingding.zip .
#        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run:
          aws deploy create-deployment
          --application-name cocodingding
          --deployment-group-name cocodingding
          --file-exists-behavior OVERWRITE
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$GITHUB_SHA.zip
          --region ap-northeast-2






## This workflow uses actions that are not certified by GitHub.
## They are provided by a third-party and are governed by
## separate terms of service, privacy policy, and support
## documentation.
## This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
## For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
#
#name: Spring Boot & Gradle CI/CD
#
## Event Trigger
## master branch에 push 또는 pull request가 발생할 경우 동작
## branch 단위 외에도, tag나 cron 식 등을 사용할 수 있음
#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#permissions:
#  contents: read
#
#jobs:
#  build:
#    # 실행 환경 지정
#    runs-on: ubuntu-latest
#
#    # Task의 sequence를 명시한다.
#    steps:
#    - uses: actions/checkout@v3
#
#    - name: Set up JDK 17
#      uses: actions/setup-java@v3
#      with:
#        java-version: '17'
#        distribution: 'temurin'
#
#    - name: Grant execute permission for gradlew
#      run: chmod +x gradlew
#      shell: bash
#
#      # Build
#    - name: Build with Gradle
#      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
#      with:
#        arguments: build
#
#    # 전송할 파일을 담을 디렉토리 생성
#    - name: Make Directory for deliver
#      run: mkdir deploy
#
#    # Jar 파일 Copy
#    - name: Copy Jar
#      run: cp ./build/libs/*.jar
#
#    # appspec.yml Copy
#    - name: Copy appspec
#      run: cp appspec.yml
#
#    # script file Copy
#    - name: Copy shell
#      run: cp ./scripts/*
#
#    # 압축파일 형태로 전달
#    - name: Make zip file
#      run: zip -r -qq -j ./cocodingding.zip
#
#    # S3 Bucket으로 copy
#    - name: Deliver to AWS S3
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      run: |
#        aws s3 cp --region ap-northeast-2 ./cocodingding.zip s3://cocodingding/
#
#    # Deploy
#    - name: Deploy
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      run: |
#        aws deploy create-deployment
#        --application-name cocodingding
#        --deployment-group-name cocodingding
#        --file-exists-behavior OVERWRITE
#        --s3-location bucket=cocodingding,bundleType=zip,key=cocodingding.zip
#        --region ap-northeast-2